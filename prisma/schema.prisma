// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider      = "mysql"
  url           = env("DATABASE_URL")
  relationMode  = "prisma"
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  name          String?
  username      String    @unique
  password      String

  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt

  role          Roles     @relation(fields: [roleId], references: [id])
  roleId        Int

  refreshToken  RefreshToken[]
  pages         Pages[]

  @@index([roleId])
}

model Roles {
  id            Int       @id @default(autoincrement())
  name          String

  users         User[]
}

model RefreshToken {
  id        Int       @id @default(autoincrement())
  token     String    @unique

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user      User      @relation(fields: [userId], references: [id])
  userId    Int

  @@index([userId])
}

model Pages {
  id                Int     @id @default(autoincrement())
  primary_color     String  @default("ffffff")
  secondary_color   String  @default("000000")
  background_color  String  @default("ffffff")
  text_color        String  @default("000000")
  profile_image      String?
  slug              String? @unique
  title             String? @default("ffffff")
  tagline           String? @default("ffffff")
  theme             String  @default("default")
  
  user              User @relation(fields: [userId], references: [id])
  userId            Int

  sections          Sections[]
  socialNetworks    SocialNetworks[]

  @@index([userId, slug])
}

model Sections {
  id        Int @id @default(autoincrement())
  type      String
  data      Json
  order     Int
  Page      Pages @relation(fields: [pageId], references: [id])
  pageId    Int

  @@index([pageId])
}


model SocialNetworks {
  id        Int @id @default(autoincrement())
  type      String
  url       String
  order     Int
  Page      Pages @relation(fields: [pageId], references: [id])
  pageId    Int

  @@index([pageId])
}